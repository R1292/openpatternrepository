<?xml version="1.0" encoding="UTF-8"?>
<!--
    This project includes the EJB subproject. It can be deployed and ran separately from other projects by choosing the "Run" target. Dependant projects are built automatically.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>openpatternrepository</artifactId>
        <groupId>nl.rug.search.opr</groupId>
        <version>0.7-SNAPSHOT</version>
    </parent>
    <groupId>nl.rug.search.opr</groupId>
    <artifactId>pattern-management</artifactId>
    <packaging>ejb</packaging>
    <version>0.7-SNAPSHOT</version>
    <name>OPR - Pattern Management</name>
    <url>http://maven.apache.org</url>
    <properties>
        <rdf2go.version>4.7.3</rdf2go.version>
        <netbeans.hint.deploy.server>gfv3ee6</netbeans.hint.deploy.server>
    </properties>
    <!--
        Dependencies of the EJB project are listed below. In ANT-projects these are set up in the project properties of NetBeans and added to the classpath.
        This task is done automatically by Maven now.
    -->
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>entities</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.6</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.5.8</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>1.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.5.3.0_1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.extras</groupId>
            <artifactId>glassfish-embedded-all</artifactId>
            <version>3.1-b32</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>toplink.essentials</groupId>
            <artifactId>toplink-essentials</artifactId>
            <version>2.1-60f</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>6.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.bliki.wiki</groupId>
            <artifactId>bliki-core</artifactId>
            <version>3.0.15</version>
        </dependency>
			<!-- RDF2Go -->
        <dependency>
            <groupId>org.semweb4j</groupId>
            <artifactId>rdf2go.api</artifactId>
            <version>${rdf2go.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <!--
        Maven repositories are set up in order for Maven to automatically fetch the dependant binaries for satisfying the dependencies listed above.
    -->
    <repositories>
        <repository>
            <id>ibiblio</id>
            <name>ibiblio</name>
            <url>http://mirrors.ibiblio.org/pub/mirrors/maven2/</url>
        </repository>
        <repository>
            <id>embedded-glassfish</id>
            <name>Embedded Glassfish Maven Repository</name>
            <url>http://download.java.net/maven/glassfish</url>
        </repository>
        <repository>
            <id>toplink</id>
            <name>Repository for library Library[toplink]</name>
            <url>http://download.java.net/maven/1</url>
            <layout>legacy</layout>
        </repository>
        <repository>
            <id>java.net2</id>
            <name>Java.Net Maven2 Repository, hosts the javaee-api dependency</name>
            <url>http://download.java.net/maven/2</url>
        </repository>
        <repository>
            <id>info-bliki-repository</id>
            <url>http://gwtwiki.googlecode.com/svn/maven-repository/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>JBOSS</id>
            <name>JBoss Repository</name>
            <url>http://repository.jboss.org/maven2/</url>
        </repository>
        <repository>
            <id>semweb4j-repo</id>
            <name>Semweb4j.org maven repo</name>
            <url>http://semweb4j.org/repo/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>

    </repositories>

<!-- This section is responsible for configuring the maven build plugins. Several build tasks can be defined and configured here. -->
    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-ejb-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <ejbVersion>3.1</ejbVersion>
                    <classpathPrefix>lib</classpathPrefix>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <check>
                        <haltOnFailure>true</haltOnFailure>
<!--                     Define coverage for each class-->
                        <lineRate>50</lineRate>
<!--                     Define coverage for the whole project-->
                        <totalLineRate>23.42</totalLineRate>
<!--                     Define coverage for each package-->
                        <packageLineRate>50</packageLineRate>
<!--                     Define coverage for each regex -->
                        <regexes>
<!--                    Example:-->
<!--                            <regex>
                                <pattern>com.example.reallyimportant.*</pattern>
                                <branchRate>90</branchRate>
                                <lineRate>80</lineRate>
                            </regex>-->
                        </regexes>
                    </check>
                </configuration>
            </plugin>

    <!--Quickfix for deploying the maven project. It's skipping the tests in the meanwhile.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.6</version>

<!--                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
-->


            </plugin>
        </plugins>
        <finalName>pattern-management</finalName>
    </build>
    <!-- NetBeans specific configure stuff -->
    <profiles>
        <profile>
            <id>endorsed</id>
            <activation>
                <property>
                    <name>sun.boot.class.path</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>2.0.2</version>
                        <configuration>
                            <!-- javaee6 contains upgrades of APIs contained within the JDK itself.
                                 As such these need to be placed on the bootclasspath, rather than classpath of the
                                 compiler.
                                 If you don't make use of these new updated API, you can delete the profile.
                                 On non-SUN jdk, you will need to create a similar profile for your jdk, with the similar property as sun.boot.class.path in Sun's JDK.-->
                            <compilerArguments>
                                <bootclasspath>${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path}</bootclasspath>
                            </compilerArguments>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>javax</groupId>
                                <artifactId>javaee-endorsed-api</artifactId>
                                <version>6.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
